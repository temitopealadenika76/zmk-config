#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/pointing.h>


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                            &mkp LCLK               &mkp RCLK
                &kp 1       &kp 2       &kp 3       &kp 4       &kp 5       &kp DEL
                &kp Q       &kp W       &kp E       &kp R       &kp T       &kp BACKSPACE
                &kp A       &kp S       &kp D       &kp F       &kp G       &kp ENTER
                &kp Z       &kp X       &kp C       &kp V       &kp B       &kp TAB
                &fw_ops     &kp RCTRL   &kp LGUI    &kp SPACE   &kp RALT    &kp RSHIFT
            >;
        };
    };
};

/ {
    combos {

        bt_pairing_combo {
            bindings = <&bt_clr>, <&bt_next>;
            key-positions = <30 31>;
            timeout-ms = <1000>;
            slow-release;
        };

        reset_combo {
            bindings = <&reset>;
            key-positions = <30 35>;  // FW_OPS (Row 5, Col 0) + RSHIFT (Row 5, Col 5)
            timeout-ms = <1000>;
            slow-release;
        };

        fw_ops_ctrl_bt_clr_combo {
            bindings = <&bt_clr>;
            key-positions = <30 34>;  // Adjust these positions to match FW_OPS and CTRL
            timeout-ms = <1000>;
            slow-release;
        };

        fw_ops_ctrl_bt_next_combo {
            bindings = <&bt_next>;
            key-positions = <30 29>;  // Adjust these positions to match FW_OPS and another key
            timeout-ms = <1000>;
            slow-release;
        };
    };
};